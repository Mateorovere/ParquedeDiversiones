# -*- coding: utf-8 -*-
"""Ej4_Practica_Repaso.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aID5a7MZgtlkY_azQeADTKq4AzwDw7y_
"""

#Representacion de un parque de diversiones mediante POO
class ParqueDeDiversiones:
  def __init__(self, nombre, ciudad, pais, atracciones):
    self.nombre = nombre
    self.ciudad = ciudad
    self.pais = pais
    self.atracciones = atracciones
  def __str__(self):
    return f'El parque de diversiones {self.nombre}, que queda en {self.ciudad},{self.pais}'
  def printAtracciones(self):
    for actividad in self.atracciones:
      print(actividad)

class Atraccion:
  def __init__(self, nombre, cap_max, zona):
    self.nombre = nombre
    self.cap_max = cap_max
    self.zona = zona

class Show(Atraccion):
  def __init__(self, nombre, cap_max, zona, horario_in,horario_out, APT = True):
    super().__init__(nombre, cap_max, zona)
    self.horario_in = horario_in
    self.horario_out = horario_out
    self.APT = APT
  def __str__(self):
    return f'Show {self.nombre}, con una capacidad maxima de: {self.cap_max} en la zona {self.zona}, est√° abierto desde las {self.horario_in} hasta las {self.horario_out}'

class Rides(Atraccion):
  def __init__(self, nombre, cap_max, zona, tranq_intenso, altura_min, max_al_dia):
    super().__init__(nombre, cap_max, zona)
    self.tranq_intenso = tranq_intenso
    self.altura_min = altura_min
    self.max_al_dia = max_al_dia
  def __str__(self):
    return f'Ride {self.nombre}, con una capacidad maxima de: {self.cap_max}, en la zona {self.zona}, es {self.tranq_intenso}, se necesita {self.altura_min} cm para pasar'

class Expiriences(Atraccion):
  def __init__(self, nombre, cap_max, zona, restriccion, tipo):
     super().__init__(nombre, cap_max, zona)
     self.restriccion = restriccion
     self.tipo = tipo
  def __str__(self):
    return f'Experiencia {self.nombre}, con una capacidad maxima de: {self.cap_max}, en la zona {self.zona}, Restriccion: {self.restriccion}, y es de tipo {self.tipo}'

atr1 = Show("Acto de magia",5,"A",9,14)
atr2 = Show("Teatro",15,"B",3,9, False)
atr3 = Rides("Paseo",12,"C","Tranquilo",180,2)
atr4 = Rides("SAFARI",5,"D","INTENSO",120,1)
atr5 = Expiriences("Nadar",1,"E","Solo mayores de edad","acuatica")
atr6 = Expiriences("Paracaidismo",2,"B","Solo personas con IQ < 200","altura")

Melina = ParqueDeDiversiones("HelloWorld","Ouro Preto","Brasil",[atr1, atr2, atr3, atr4, atr5, atr6])
print(Melina)
Melina.printAtracciones()

